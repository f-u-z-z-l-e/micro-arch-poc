version: '2.4'
services:
  zookeeper:
    container_name: zookeeper
    image: zookeeper:3.5.4-beta
    networks:
      kafka_net:
        ipv4_address: 172.20.1.10
    expose:
    - 2181

  kafka:
    container_name: kafka
    image: wurstmeister/kafka:2.11-1.0.1
    #    image: wurstmeister/kafka:2.11-1.1.0
    networks:
      kafka_net:
        ipv4_address: 172.20.1.20
    expose:
    - 9092
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
    - zookeeper

  gateway-service:
    container_name: gateway
    build: gateway-service/build/docker/.
    networks:
      kafka_net:
        ipv4_address: 172.20.1.30
    depends_on:
      kafka:
        condition: service_started
      logstash:
        condition: service_healthy
    logging:
      driver: syslog
      options:
        syslog-address: "tcp://127.0.0.1:25826"

  account-registration-service:
    container_name: account-registration-service
    build: account-registration-service/build/docker/.
    networks:
      kafka_net:
        ipv4_address: 172.20.1.31
    depends_on:
      kafka:
        condition: service_started
      logstash:
        condition: service_healthy
    logging:
      driver: syslog
      options:
        syslog-address: "tcp://127.0.0.1:25826"

  #  account-registration-service2:
  #    container_name: account-registration-service2
  #    build: account-registration-service/build/docker/.
  #    networks:
  #      kafka_net:
  #        ipv4_address: 172.20.1.32
  #    depends_on:
  #      - kafka

  account-balance-service:
    container_name: account-balance-service
    build: account-balance-service/build/docker/.
    networks:
      kafka_net:
        ipv4_address: 172.20.1.33
    depends_on:
      kafka:
        condition: service_started
      logstash:
        condition: service_healthy
    logging:
      driver: syslog
      options:
        syslog-address: "tcp://127.0.0.1:25826"

  config-server:
    container_name: config-server
    build: config-server/build/docker/.
    networks:
      kafka_net:
        ipv4_address: 172.20.1.40
    depends_on:
    - zookeeper

  zipkin:
    container_name: zipkin
    image: openzipkin/zipkin
    networks:
      kafka_net:
        ipv4_address: 172.20.1.50
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      kafka:
        condition: service_started
      logstash:
        condition: service_healthy
    logging:
      driver: syslog
      options:
        syslog-address: "tcp://127.0.0.1:25826"

  zipkin-ui:
    container_name: zipkin-ui
    image: openzipkin/zipkin-ui
    networks:
      kafka_net:
        ipv4_address: 172.20.1.51
    environment:
    - ZIPKIN_BASE_URL=http://zipkin:9411
    depends_on:
      zipkin:
        condition: service_started
      logstash:
        condition: service_healthy
    logging:
      driver: syslog
      options:
        syslog-address: "tcp://127.0.0.1:25826"

  vault:
    image: vault:0.10.4
    container_name: vault
    hostname: vault
    environment:
      VAULT_ADDR: http://127.0.0.1:8200
      VAULT_DEV_ROOT_TOKEN_ID: myroot
      VAULT_DEV_LISTEN_ADDRESS: 0.0.0.0:8200
    networks:
      kafka_net:
        ipv4_address: 172.20.1.41
    ports:
    - "8200:8200"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.4.0
    container_name: elasticsearch
    hostname: elasticsearch
    ports:
    - "9200:9200"
    - "9300:9300"
    environment:
    - "xpack.security.enabled=false"
    - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    - "discovery.type=single-node"
    networks:
      kafka_net:
        ipv4_address: 172.20.1.61
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200"]
      interval: 10s
      timeout: 5s
      retries: 10

  kibana:
    image: docker.elastic.co/kibana/kibana:6.4.0
    container_name: kibana
    hostname: kibana
    ports:
    - "5601:5601"
    environment:
      SERVER_NAME: kibana
      ELASTICSEARCH_URL: http://elasticsearch:9200
    networks:
      kafka_net:
        ipv4_address: 172.20.1.62
    depends_on:
      elasticsearch:
        condition: service_healthy

  logstash:
    image: docker.elastic.co/logstash/logstash:6.4.0
    container_name: logstash
    hostname: logstash
    ports:
    - "25826:25826"
    volumes:
    - $PWD/elk-config:/elk-config
    command: logstash -f /elk-config/logstash.config
    networks:
      kafka_net:
        ipv4_address: 172.20.1.63
    depends_on:
      elasticsearch:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 10s
      timeout: 5s
      retries: 10

networks:
  kafka_net:
    driver: bridge
    ipam:
      driver: default
      config:
      - subnet: 172.20.1.0/24

# to connect to zookeeper from you local machine edit /etc/hosts and add "172.20.1.10  zookeeper"
# to connect to kafka from you local machine edit /etc/hosts and add "172.20.1.20  kafka"
# to connect to cassandra from you local machine edit /etc/hosts and add "172.20.1.40 cassandra"

#  cassandra:
#    container_name: cassandra
#    image: library/cassandra:3.11
#    networks:
#      kafka_net:
#        ipv4_address: 172.20.1.40
# docker exec -ti cassandra /bin/bash
# cqlsh
# CREATE KEYSPACE info WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 };
